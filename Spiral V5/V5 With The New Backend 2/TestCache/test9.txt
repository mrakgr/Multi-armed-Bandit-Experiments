module SpiralExample.Main
let cuda_kernels = """
extern "C" {
    
}
"""

type Tuple0 =
    struct
    val mem_0: Union1
    val mem_1: Union1
    val mem_2: Union1
    new(arg_mem_0, arg_mem_1, arg_mem_2) = {mem_0 = arg_mem_0; mem_1 = arg_mem_1; mem_2 = arg_mem_2}
    end
and Union1 =
    | Union1Case0
    | Union1Case1
let rec method_1(): Tuple0 =
    Tuple0(Union1Case0, Union1Case0, Union1Case0)
let (var_0: Tuple0) = method_1()
let (var_1: Union1) = var_0.mem_0
let (var_2: Union1) = var_0.mem_1
let (var_3: Union1) = var_0.mem_2
match var_1 with
| Union1Case0 ->
    1L
| Union1Case1 ->
    match var_2 with
    | Union1Case0 ->
        2L
    | Union1Case1 ->
        match var_3 with
        | Union1Case0 ->
            3L
        | Union1Case1 ->
            4L

