module SpiralExample.Main
let cuda_kernels = """
extern "C" {
    
}
"""

type Tuple0 =
    struct
    val mem_0: int64
    val mem_1: int64
    new(arg_mem_0, arg_mem_1) = {mem_0 = arg_mem_0; mem_1 = arg_mem_1}
    end
let rec method_0(): Tuple0 =
    Tuple0(1L, 2L)
and method_1(): Tuple0 =
    Tuple0(3L, 4L)
and method_2((var_0: int64), (var_1: int64), (var_2: int64), (var_3: int64)): Tuple0 =
    let (var_4: int64) = (var_0 + var_2)
    let (var_5: int64) = (var_1 + var_3)
    Tuple0(var_4, var_5)
let (var_0: Tuple0) = method_0()
let (var_1: int64) = var_0.mem_0
let (var_2: int64) = var_0.mem_1
let (var_3: Tuple0) = method_1()
let (var_4: int64) = var_3.mem_0
let (var_5: int64) = var_3.mem_1
method_2((var_1: int64), (var_2: int64), (var_4: int64), (var_5: int64))
