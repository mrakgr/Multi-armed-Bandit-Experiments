module SpiralExample.Main
let cuda_kernels = """
extern "C" {
    
}
"""

let rec method_0((var_0: string), (var_1: int64), (var_2: string), (var_3: int64)): unit =
    let (var_4: int64) = (int64 var_2.Length)
    let (var_5: bool) = (var_1 < var_4)
    if var_5 then
        let (var_6: char) = var_2.[int32 var_1]
        let (var_7: int64) = (var_1 + 1L)
        let (var_9: bool) =
            if (var_3 >= 0L) then
                let (var_8: int64) = (int64 var_0.Length)
                (var_3 < var_8)
            else
                false
        if var_9 then
            let (var_10: char) = var_0.[int32 var_3]
            let (var_11: bool) = (var_6 = var_10)
            let (var_12: int64) = (var_3 + 1L)
            if var_11 then
                method_0((var_0: string), (var_7: int64), (var_2: string), (var_12: int64))
            else
                (failwith "char")
        else
            (failwith "string index out of bounds")
    else
        System.Console.WriteLine(var_2)
let (var_0: string) = "qwe"
let (var_1: string) = "qwerty"
let (var_2: int64) = 0L
let (var_3: int64) = 0L
method_0((var_1: string), (var_2: int64), (var_0: string), (var_3: int64))

