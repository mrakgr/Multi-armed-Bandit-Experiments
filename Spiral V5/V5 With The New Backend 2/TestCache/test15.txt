module SpiralExample.Main
let cuda_kernels = """
extern "C" {
    
}
"""

type Tuple0 =
    struct
    val mem_0: int64
    val mem_1: int64
    new(arg_mem_0, arg_mem_1) = {mem_0 = arg_mem_0; mem_1 = arg_mem_1}
    end
and Env1 =
    struct
    val mem_0: int64
    val mem_1: int64
    val mem_2: int64
    new(arg_mem_0, arg_mem_1, arg_mem_2) = {mem_0 = arg_mem_0; mem_1 = arg_mem_1; mem_2 = arg_mem_2}
    end
let (var_0: System.Text.StringBuilder) = System.Text.StringBuilder("Qwe", 128)
let (var_1: System.Text.StringBuilder) = var_0.Append(123L)
let (var_2: System.Text.StringBuilder) = var_0.AppendLine()
let (var_3: System.Text.StringBuilder) = var_0.Append(123s)
let (var_4: System.Text.StringBuilder) = var_0.AppendLine()
let (var_5: System.Text.StringBuilder) = var_0.Append("qwe")
let (var_6: System.Text.StringBuilder) = var_0.AppendLine()
let (var_7: string) = var_0.ToString()
System.Console.Write(var_7)
let (var_8: System.Collections.Generic.Dictionary<Tuple0, Env1>) = System.Collections.Generic.Dictionary<Tuple0, Env1>(128)
var_8.Add(Tuple0(1L, 1L), (Env1(1L, 2L, 3L)))
var_8.get_Item(Tuple0(1L, 1L))
