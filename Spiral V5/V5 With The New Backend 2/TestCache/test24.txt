module SpiralExample.Main
let cuda_kernels = """
extern "C" {
    
}
"""

type Tuple0 =
    struct
    val mem_0: string
    val mem_1: int64
    new(arg_mem_0, arg_mem_1) = {mem_0 = arg_mem_0; mem_1 = arg_mem_1}
    end
and Tuple1 =
    struct
    val mem_0: string
    val mem_1: bool
    new(arg_mem_0, arg_mem_1) = {mem_0 = arg_mem_0; mem_1 = arg_mem_1}
    end
and Tuple2 =
    struct
    val mem_0: string
    val mem_1: string
    new(arg_mem_0, arg_mem_1) = {mem_0 = arg_mem_0; mem_1 = arg_mem_1}
    end
and Tuple3 =
    struct
    val mem_0: string
    val mem_1: int8
    new(arg_mem_0, arg_mem_1) = {mem_0 = arg_mem_0; mem_1 = arg_mem_1}
    end
and Tuple4 =
    struct
    val mem_0: string
    val mem_1: float
    new(arg_mem_0, arg_mem_1) = {mem_0 = arg_mem_0; mem_1 = arg_mem_1}
    end
and Tuple5 =
    struct
    val mem_0: string
    new(arg_mem_0) = {mem_0 = arg_mem_0}
    end
and Tuple6 =
    struct
    val mem_0: string
    new(arg_mem_0) = {mem_0 = arg_mem_0}
    end
and Tuple7 =
    struct
    val mem_0: Tuple0
    val mem_1: Tuple0
    val mem_2: Tuple1
    val mem_3: Tuple1
    val mem_4: Tuple2
    val mem_5: Tuple3
    val mem_6: Tuple4
    val mem_7: Tuple4
    val mem_8: Tuple5
    val mem_9: Tuple6
    new(arg_mem_0, arg_mem_1, arg_mem_2, arg_mem_3, arg_mem_4, arg_mem_5, arg_mem_6, arg_mem_7, arg_mem_8, arg_mem_9) = {mem_0 = arg_mem_0; mem_1 = arg_mem_1; mem_2 = arg_mem_2; mem_3 = arg_mem_3; mem_4 = arg_mem_4; mem_5 = arg_mem_5; mem_6 = arg_mem_6; mem_7 = arg_mem_7; mem_8 = arg_mem_8; mem_9 = arg_mem_9}
    end
Tuple7(Tuple0("0", 0L), Tuple0("1", 1L), Tuple1("false", false), Tuple1("true", true), Tuple2("asd", "asd"), Tuple3("1i8", 1y), Tuple4("5.5", 5.500000), Tuple4("unknown", 5.000000), Tuple5(".5.5"), Tuple6(".23u32"))
