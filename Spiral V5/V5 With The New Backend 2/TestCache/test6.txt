module SpiralExample.Main
let cuda_kernels = """
extern "C" {
    
}
"""

type Env0 =
    struct
    val mem_0: int64
    val mem_1: int64
    val mem_2: Tuple3
    new(arg_mem_0, arg_mem_1, arg_mem_2) = {mem_0 = arg_mem_0; mem_1 = arg_mem_1; mem_2 = arg_mem_2}
    end
and Env1 =
    struct
    val mem_0: int64
    new(arg_mem_0) = {mem_0 = arg_mem_0}
    end
and Env2 =
    struct
    val mem_0: int64
    val mem_1: int64
    new(arg_mem_0, arg_mem_1) = {mem_0 = arg_mem_0; mem_1 = arg_mem_1}
    end
and Tuple3 =
    struct
    val mem_0: float
    val mem_1: int64
    val mem_2: float
    new(arg_mem_0, arg_mem_1, arg_mem_2) = {mem_0 = arg_mem_0; mem_1 = arg_mem_1; mem_2 = arg_mem_2}
    end
let rec method_0(): Env0 =
    let (var_0: Env1) = method_1()
    let (var_1: int64) = var_0.mem_0
    let (var_2: Env2) = method_2((var_1: int64))
    let (var_3: int64) = var_2.mem_0
    let (var_4: int64) = var_2.mem_1
    method_3((var_3: int64), (var_4: int64))
and method_1(): Env1 =
    (Env1(1L))
and method_2((var_0: int64)): Env2 =
    (Env2(var_0, 2L))
and method_3((var_0: int64), (var_1: int64)): Env0 =
    (Env0(var_0, var_1, Tuple3(2.200000, 3L, 4.500000)))
method_0()
