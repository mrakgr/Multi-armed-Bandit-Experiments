module SpiralExample.Main
let cuda_kernels = """
extern "C" {
    
}
"""

type Rec0 =
    | Rec0Case0
    | Rec0Case1 of Tuple1
and Tuple1 =
    struct
    val mem_0: int64
    val mem_1: Rec0
    new(arg_mem_0, arg_mem_1) = {mem_0 = arg_mem_0; mem_1 = arg_mem_1}
    end
let (var_0: Rec0) = Rec0Case0
match var_0 with
| Rec0Case0 ->
    0L
| Rec0Case1(var_1) ->
    let (var_2: int64) = var_1.mem_0
    let (var_3: Rec0) = var_1.mem_1
    match var_3 with
    | Rec0Case0 ->
        55L
    | Rec0Case1(var_4) ->
        let (var_5: int64) = var_4.mem_0
        let (var_6: Rec0) = var_4.mem_1
        match var_6 with
        | Rec0Case0 ->
            let (var_8: int64) = (var_2 + var_5)
            (var_8 + 10L)
        | Rec0Case1(var_7) ->
            let (var_9: int64) = var_7.mem_0
            let (var_10: Rec0) = var_7.mem_1
            (var_2 + var_5)

