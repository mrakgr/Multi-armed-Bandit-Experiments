module SpiralExample.Main
let cuda_kernels = """
extern "C" {
    
}
"""

type Union0 =
    | Union0Case0 of int64
    | Union0Case1 of Tuple1
and Tuple1 =
    struct
    val mem_0: int64
    val mem_1: int64
    new(arg_mem_0, arg_mem_1) = {mem_0 = arg_mem_0; mem_1 = arg_mem_1}
    end
let (var_0: Union0) = (Union0Case1(Tuple1(1L, 1L)))
match var_0 with
| Union0Case0(var_1) ->
    var_1
| Union0Case1(var_2) ->
    let (var_3: int64) = var_2.mem_0
    let (var_4: int64) = var_2.mem_1
    0L

