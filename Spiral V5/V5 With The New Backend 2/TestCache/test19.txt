module SpiralExample.Main
let cuda_kernels = """
extern "C" {
    
}
"""

type Tuple0 =
    struct
    val mem_0: int64
    val mem_1: int64
    new(arg_mem_0, arg_mem_1) = {mem_0 = arg_mem_0; mem_1 = arg_mem_1}
    end
let rec method_0 ((var_3: int64)) ((var_0: int64), (var_1: Tuple0), (var_2: int64)): int64 =
    let (var_4: int64) = var_1.mem_0
    let (var_5: int64) = var_1.mem_1
    let (var_6: int64) = (8L + var_3)
    let (var_7: int64) = (var_6 + var_0)
    let (var_8: int64) = (var_7 + var_4)
    let (var_9: int64) = (var_8 + var_5)
    (var_9 + var_2)
let (var_0: int64) = 7L
let (var_4: (int64 * Tuple0 * int64 -> int64)) = method_0((var_0: int64))
var_4(1L, Tuple0(2L, 5L), 3L)
