type Rec0 =
    | Rec0Case0
    | Rec0Case1 of Tuple3
and Rec1 =
    | Rec1Case0
    | Rec1Case1 of Tuple2
and Tuple2 =
    struct
    val mem_0: int64
    val mem_1: Rec1
    new(arg_mem_0, arg_mem_1) = {mem_0 = arg_mem_0; mem_1 = arg_mem_1}
    end
and Tuple3 =
    struct
    val mem_0: Rec1
    val mem_1: Rec0
    new(arg_mem_0, arg_mem_1) = {mem_0 = arg_mem_0; mem_1 = arg_mem_1}
    end
let rec method_22((var_0: Rec0)): Rec1 =
    match var_0 with
    | Rec0Case0 ->
        Rec1Case0
    | Rec0Case1(var_1) ->
        let (var_2: Rec1) = var_1.mem_0
        let (var_3: Rec0) = var_1.mem_1
        let (var_4: Rec1) = method_22((var_3: Rec0))
        method_23((var_2: Rec1), (var_4: Rec1))
and method_23((var_0: Rec1), (var_1: Rec1)): Rec1 =
    match var_0 with
    | Rec1Case0 ->
        var_1
    | Rec1Case1(var_2) ->
        let (var_3: int64) = var_2.mem_0
        let (var_4: Rec1) = var_2.mem_1
        let (var_5: Rec1) = method_23((var_4: Rec1), (var_1: Rec1))
        (Rec1Case1(Tuple2(var_3, var_5)))
let (var_0: Rec1) = (Rec1Case1(Tuple2(1L, (Rec1Case1(Tuple2(2L, (Rec1Case1(Tuple2(3L, Rec1Case0)))))))))
let (var_1: Rec1) = (Rec1Case1(Tuple2(4L, (Rec1Case1(Tuple2(5L, (Rec1Case1(Tuple2(6L, Rec1Case0)))))))))
let (var_2: Rec0) = (Rec0Case1(Tuple3(var_0, (Rec0Case1(Tuple3(var_1, Rec0Case0))))))
method_22((var_2: Rec0))
