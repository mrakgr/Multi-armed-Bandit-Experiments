module SpiralExample.Main
let cuda_kernels = """
extern "C" {
    
}
"""

let rec method_0 ((var_0: int64), (var_1: int64)): int64 =
    (var_0 + var_1)
and method_1 ((var_0: int64), (var_1: int64)): int64 =
    (var_0 * var_1)
let (var_0: (int64 ref)) = (ref 0L)
var_0 := 5L
let (var_1: int64) = (!var_0)
let (var_4: (int64 * int64 -> int64)) = method_0
let (var_5: ((int64 * int64 -> int64) ref)) = (ref var_4)
let (var_8: (int64 * int64 -> int64)) = method_1
var_5 := var_8
let (var_9: (int64 * int64 -> int64)) = (!var_5)
let (var_10: (int64 [])) = Array.zeroCreate<int64> (System.Convert.ToInt32(10L))
var_10.[int32 3L] <- 2L
let (var_11: int64) = var_10.[int32 3L]

